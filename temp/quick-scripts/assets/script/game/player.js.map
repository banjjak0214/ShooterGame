{"version":3,"sources":["player.js"],"names":["GameData","require","cc","Class","extends","Component","properties","bulletGroupPrefab","Prefab","bonusNode","Node","speedLbl","Label","powerLbl","gameBox","fireAudio","AudioClip","bonusAudio","deadAudio","onLoad","bulletGroupPool","NodePool","i","bullet","instantiate","put","start","init","node","on","shooting","stopPlay","_isSound","audioEngine","play","isSound","_bAudiocount","skipCount","count","rocketing","isStoped","active","x","_moveDir","tipNum","bulletMulti","update","dt","rocketStatus","emit","speed","bulletSpeed","parseInt","createBullet","bulletGroup","size","get","setPosition","y","height","parent","getComponent","runAction","sequence","delayTime","moveTo","callFunc","onCollisionEnter","other","self","otherName","name","removeFromParent","string","showBonusView","bulletPower","game","setRockect","explore","jumpMove","_label","getValue","score","deltaX","width","absDeltaX","Math","abs","deltaY","direction","collideStatus","onCollisionExit","deltaW","cursorXPos","predictPos","actorWPos","convertToWorldSpaceAR","getPosition","childs","children","index","child","subChilds","sIndex","subChild","blockWPos","minH","minw","isEqDir","realPos","pauseGame","stopAllActions"],"mappings":";;;;;;AAAA;AACA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,2BAAkBL,GAAGM,MADb;AAERC,mBAAUP,GAAGQ,IAFL;AAGRC,kBAAST,GAAGU,KAHJ;AAIRC,kBAASX,GAAGU,KAJJ;AAKRE,iBAAQZ,GAAGQ,IALH;AAMRK,mBAAUb,GAAGc,SANL;AAORC,oBAAWf,GAAGc,SAPN;AAQRE,mBAAUhB,GAAGc;AARL,KAHP;;AAcLG,UAdK,oBAcK;AACN,aAAKC,eAAL,GAAuB,IAAIlB,GAAGmB,QAAP,EAAvB;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwB,EAAEA,CAA1B,EAA6B;AACzB,gBAAIC,SAASrB,GAAGsB,WAAH,CAAe,KAAKjB,iBAApB,CAAb;AACA,iBAAKa,eAAL,CAAqBK,GAArB,CAAyBF,MAAzB;AACH;AACJ,KApBI;AAsBLG,SAtBK,mBAsBI;AACL,aAAKC,IAAL;AACA,aAAKC,IAAL,CAAUC,EAAV,CAAa,UAAb,EAAyB,KAAKC,QAA9B,EAAwC,IAAxC;AACA;AACA,aAAKF,IAAL,CAAUC,EAAV,CAAa,QAAb,EAAuB,KAAKE,QAA5B,EAAsC,IAAtC;;AAEA,aAAKH,IAAL,CAAUC,EAAV,CAAa,UAAb,EAAyB,YAAU;AAC/B,gBAAG,CAAC,KAAKG,QAAT,EAAmB;AACnB9B,eAAG+B,WAAH,CAAeC,IAAf,CAAoB,KAAKhB,SAAzB,EAAoC,KAApC,EAA2C,CAA3C;AACH,SAHD,EAGG,IAHH;AAIA,aAAKU,IAAL,CAAUC,EAAV,CAAa,WAAb,EAA0B,YAAU;AAChC,gBAAG,CAAC,KAAKG,QAAT,EAAmB;AACnB9B,eAAG+B,WAAH,CAAeC,IAAf,CAAoB,KAAKjB,UAAzB,EAAqC,KAArC,EAA4C,CAA5C;AACH,SAHD,EAGG,IAHH;AAIH,KApCI;AAqCLU,QArCK,kBAqCC;AACF,aAAKK,QAAL,GAAgBhC,SAASmC,OAAzB;AACA,aAAKC,YAAL,GAAoB,CAApB;AACA,aAAKC,SAAL,GAAiB,CAAjB;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,SAAL,GAAiB,KAAjB;AACA,aAAKC,QAAL,GAAgB,KAAhB;AACA,aAAKZ,IAAL,CAAUa,MAAV,GAAmB,IAAnB;AACA,aAAKb,IAAL,CAAUc,CAAV,GAAc,CAAd;AACA,aAAKC,QAAL,GAAgB,CAAhB;AACA,YAAG3C,SAAS4C,MAAT,GAAkB,CAArB,EAAuB;AACnB5C,qBAAS4C,MAAT,IAAmB,CAAnB;AACA5C,qBAAS6C,WAAT,GAAuB,CAAvB;AACH;AACJ,KAnDI;AAoDLC,UApDK,kBAoDGC,EApDH,EAoDO;AACR,YAAG,KAAKP,QAAL,IAAiBxC,SAASgD,YAA7B,EAA2C;AAC3C,aAAKpB,IAAL,CAAUqB,IAAV,CAAe,UAAf;AACH,KAvDI;AAwDLnB,YAxDK,sBAwDM;AACP,aAAKQ,KAAL,IAAc,CAAd;AACA,YAAIY,QAAQlD,SAASmD,WAArB;;AAEA,YAAGD,QAAQ,EAAX,EAAc;AACVA,oBAAQ,EAAR;AACH;AACD,YAAI,KAAKZ,KAAL,GAAac,SAAS,KAAKF,KAAd,CAAb,KAAsC,CAA1C,EAA6C;AACzC,iBAAKG,YAAL;AACA,gBAAG,KAAKjB,YAAL,IAAqB,KAAKC,SAA1B,IAAuC,KAAKL,QAA/C,EAAwD;AACpD9B,mBAAG+B,WAAH,CAAeC,IAAf,CAAoB,KAAKnB,SAAzB,EAAoC,KAApC,EAA2C,CAA3C;AACA,qBAAKqB,YAAL,GAAoB,CAApB;AACH,aAHD,MAGK;AACD,qBAAKA,YAAL,IAAqB,CAArB;AACH;AACJ;;AAED,YAAI,KAAKE,KAAL,IAAc,GAAlB,EAAuB,KAAKA,KAAL,GAAa,CAAb;AAC1B,KA1EI;AA2ELe,gBA3EK,0BA2EU;AACX,YAAIC,cAAc,IAAlB;;AAEA,YAAI,KAAKlC,eAAL,CAAqBmC,IAArB,KAA8B,CAAlC,EAAqC;AACjCD,0BAAc,KAAKlC,eAAL,CAAqBoC,GAArB,EAAd;AACH,SAFD,MAEO;AACHF,0BAAcpD,GAAGsB,WAAH,CAAe,KAAKjB,iBAApB,CAAd;AACH;;AAED+C,oBAAYG,WAAZ,CAAwB,KAAK7B,IAAL,CAAUc,CAAlC,EAAqC,KAAKd,IAAL,CAAU8B,CAAV,GAAc,KAAK9B,IAAL,CAAU+B,MAAV,GAAmB,CAAtE;AACAL,oBAAYM,MAAZ,GAAqB,KAAK9C,OAA1B;AACAwC,oBAAYO,YAAZ,CAAyB,aAAzB,EAAwClC,IAAxC,CAA6C3B,SAAS6C,WAAtD;;AAEAS,oBAAYQ,SAAZ,CAAsB5D,GAAG6D,QAAH,CAClB7D,GAAG8D,SAAH,CAAa,IAAb,CADkB,EAElB9D,GAAG+D,MAAH,CAAU,GAAV,EAAeX,YAAYZ,CAA3B,EAA8B,KAAK5B,OAAL,CAAa6C,MAAb,GAAoB,CAAlD,CAFkB,EAGlBzD,GAAGgE,QAAH,CAAY,YAAU;AAClB,iBAAK9C,eAAL,CAAqBK,GAArB,CAAyB6B,WAAzB;AACH,SAFD,EAEG,IAFH,CAHkB,CAAtB;AAQH,KAhGI;AAiGLa,oBAjGK,4BAiGYC,KAjGZ,EAiGmBC,IAjGnB,EAiGyB;AAC1B,YAAIC,YAAYF,MAAMxC,IAAN,CAAW2C,IAA3B;AACA,YAAGD,aAAa,MAAhB,EAAuB;AACnB,iBAAK1C,IAAL,CAAUqB,IAAV,CAAe,WAAf;AACAmB,kBAAMxC,IAAN,CAAW4C,gBAAX;AACAxE,qBAASmD,WAAT,IAAwB,CAAxB;AACA,iBAAKxC,QAAL,CAAc8D,MAAd,GAAuB,UAAUzE,SAASmD,WAA1C;AACA,iBAAKuB,aAAL;AACA,gBAAG1E,SAASmD,WAAT,GAAuB,CAA1B,EAA4B;AACxB,qBAAKd,SAAL,GAAiB,CAAjB;AACH;AACJ,SATD,MASM,IAAGiC,aAAa,UAAhB,EAA2B;AAC7B,iBAAK1C,IAAL,CAAUqB,IAAV,CAAe,WAAf;AACAmB,kBAAMxC,IAAN,CAAW4C,gBAAX;AACAxE,qBAAS2E,WAAT,IAAwB,CAAxB;AACA,iBAAK9D,QAAL,CAAc4D,MAAd,GAAuB,UAAUzE,SAAS2E,WAA1C;AACA,iBAAKD,aAAL;AACH,SANK,MAMA,IAAGJ,aAAa,QAAhB,EAAyB;AAC3B,iBAAK1C,IAAL,CAAUqB,IAAV,CAAe,WAAf;AACAmB,kBAAMxC,IAAN,CAAW4C,gBAAX;AACA,gBAAGxE,SAAS6C,WAAT,GAAuB,CAA1B,EAA4B;AACxB7C,yBAAS6C,WAAT,IAAwB,CAAxB;AACH;AACJ,SANK,MAMA,IAAGyB,aAAa,QAAhB,EAAyB;AAC3BF,kBAAMxC,IAAN,CAAW4C,gBAAX;AACA,gBAAGxE,SAASgD,YAAZ,EAA0B;AAC1B;AACAhD,qBAAS4E,IAAT,CAAcC,UAAd;AACA;AACH,SANK,MAMA,IAAGP,aAAa,UAAhB,EAA2B;AAC7BF,kBAAMxC,IAAN,CAAWiC,YAAX,CAAwB,UAAxB,EAAoCiB,OAApC;AACH,SAFK,MAEA,IAAGR,aAAa,OAAb,IAAwBA,aAAa,WAAxC,EAAoD;AACtDtE,qBAAS+E,QAAT,GAAoB,CAApB;;AAEA,gBAAG/E,SAASgD,YAAZ,EAAyB;AACrB,qBAAKpB,IAAL,CAAUqB,IAAV,CAAe,UAAf;AACA,oBAAI+B,SAASZ,MAAMxC,IAAN,CAAWiC,YAAX,CAAwB,OAAxB,EAAiCoB,QAAjC,EAAb;AACAjF,yBAASkF,KAAT,IAAkBF,MAAlB;AACAZ,sBAAMxC,IAAN,CAAWiC,YAAX,CAAwB,OAAxB,EAAiCiB,OAAjC;AACA,qBAAKhE,OAAL,CAAamC,IAAb,CAAkB,cAAlB;AACH,aAND,MAMK;AACD,oBAAIkC,SAASd,KAAKzC,IAAL,CAAUc,CAAV,IAAe0B,MAAMxC,IAAN,CAAWc,CAAX,GAAe,KAAK5B,OAAL,CAAasE,KAAb,GAAmB,CAAjD,CAAb;AACA,oBAAIC,YAAYC,KAAKC,GAAL,CAASJ,MAAT,CAAhB;AACA,oBAAIK,SAASpB,MAAMxC,IAAN,CAAWgC,MAAX,CAAkBF,CAAlB,GAAsBU,MAAMxC,IAAN,CAAW8B,CAAjC,GAAqC,KAAK9B,IAAL,CAAU8B,CAA5D;;AAEA,oBAAG2B,YAAY,GAAZ,IAAmBG,SAAS,OAAKpB,MAAMxC,IAAN,CAAW+B,MAAX,GAAoB,KAAK/B,IAAL,CAAU+B,MAAnC,IAA2C,CAA1E,EAA4E;AACxE,yBAAK/B,IAAL,CAAUqB,IAAV,CAAe,QAAf;AACA;AACH;;AAED,oBAAIwC,YAAYN,SAAOE,SAAvB;AACArF,yBAAS0F,aAAT,GAAyB,CAAC1F,SAAS0F,aAAT,CAAuB,CAAvB,IAA0B,CAA3B,EAA8BD,SAA9B,CAAzB;;AAEA,oBAAGJ,YAAY,GAAf,EAAmB;AACfhB,yBAAKzC,IAAL,CAAUc,CAAV,IAAe+C,aAAW,MAAMJ,SAAjB,CAAf;AACH;AACJ;AACJ;AACJ,KA3JI;;AA4JLM,qBAAiB,yBAAUvB,KAAV,EAAiBC,IAAjB,EAAuB;AACpC,YAAG,KAAK7B,QAAR,EAAkB;;AAElB,YAAG4B,MAAMxC,IAAN,CAAW2C,IAAX,IAAmB,OAAnB,IAA8BH,MAAMxC,IAAN,CAAW2C,IAAX,IAAmB,WAApD,EAAgE;AAC5DvE,qBAAS0F,aAAT,CAAuB,CAAvB,KAA6B,CAA7B;;AAEA,gBAAIE,SAAS5F,SAAS6F,UAAT,GAAsB,KAAKjE,IAAL,CAAUc,CAA7C;AACA,gBAAGkD,UAAU,CAAV,IAAe5F,SAAS0F,aAAT,CAAuB,CAAvB,IAA4B,CAA9C,EAAiD;;AAEjD,gBAAII,aAAa,IAAjB;AACA,gBAAIC,YAAY,KAAKnE,IAAL,CAAUgC,MAAV,CAAiBoC,qBAAjB,CAAuC,KAAKpE,IAAL,CAAUqE,WAAV,EAAvC,CAAhB;;AAEA,gBAAIC,SAAS,KAAKpF,OAAL,CAAaqF,QAA1B;AACA,iBAAI,IAAIC,KAAR,IAAiBF,MAAjB,EAAwB;AACpB,oBAAIG,QAAQH,OAAOE,KAAP,CAAZ;AACA,oBAAGC,MAAM9B,IAAN,IAAc,WAAd,IAA6B8B,MAAM9B,IAAN,IAAc,UAA9C,EAAyD;AACrD,wBAAI+B,YAAYD,MAAMF,QAAtB;AACA,yBAAI,IAAII,MAAR,IAAkBD,SAAlB,EAA4B;AACxB,4BAAIE,WAAWF,UAAUC,MAAV,CAAf;AACA,4BAAGC,SAASjC,IAAT,IAAiB,OAApB,EAA6B;;AAE7B,4BAAIkC,YAAYD,SAAS5C,MAAT,CAAgBoC,qBAAhB,CAAsCQ,SAASP,WAAT,EAAtC,CAAhB;AACA,4BAAId,SAASsB,UAAU/D,CAAV,GAAcqD,UAAUrD,CAArC;AACA,4BAAI8C,SAASiB,UAAU/C,CAAV,GAAcqC,UAAUrC,CAArC;AACA,4BAAIgD,OAAOF,SAAS7C,MAAT,GAAgB,CAA3B;AACA,4BAAIgD,OAAO,CAACH,SAASpB,KAAT,GAAiB,KAAKxD,IAAL,CAAUwD,KAA5B,IAAmC,CAA9C;;AAEA,4BAAIwB,UAAUzB,SAAOS,MAArB;;AAEA,4BAAGN,KAAKC,GAAL,CAASC,MAAT,IAAmBkB,IAAnB,IAA2BE,UAAU,CAAxC,EAA0C;AACtC,gCAAGzB,SAAQ,CAAR,IAAaA,SAASS,MAAzB,EAAgC;AAC5BA,yCAAST,MAAT;AACAW,6CAAaU,SAAS9D,CAAT,GAAaiE,IAA1B;AACH,6BAHD,MAGM,IAAGxB,SAAS,CAAT,IAAcA,SAASS,MAA1B,EAAiC;AACnCA,yCAAST,MAAT;AACAW,6CAAaU,SAAS9D,CAAT,GAAaiE,IAA1B;AACH;AACJ;AACJ;AACJ;AACJ;;AAED,gBAAGb,eAAe,IAAlB,EAAuB;AACnB,qBAAKlE,IAAL,CAAUc,CAAV,GAAc1C,SAAS6F,UAAvB;AACH,aAFD,MAEK;AACD,oBAAIgB,UAAUf,aAAa,KAAKhF,OAAL,CAAasE,KAAb,GAAmB,CAA9C;AACApF,yBAAS+E,QAAT,GAAoB,CAApB;AACA,qBAAKnD,IAAL,CAAUc,CAAV,GAAcmE,OAAd;AACH;AACJ;AACJ,KA9MI;AA+ML9E,YA/MK,sBA+MK;AACN,aAAKS,QAAL,GAAgB,IAAhB;AACAxC,iBAAS4E,IAAT,CAAckC,SAAd;AACA;AACH,KAnNI;AAoNLpC,iBApNK,2BAoNU;AACX,aAAKjE,SAAL,CAAesG,cAAf;AACA,aAAKtG,SAAL,CAAeqD,SAAf,CAAyB5D,GAAG6D,QAAH,CACrB7D,GAAG+D,MAAH,CAAU,GAAV,EAAe,CAAC,GAAhB,EAAqB,KAAKxD,SAAL,CAAeiD,CAApC,CADqB,EAErBxD,GAAG8D,SAAH,CAAa,GAAb,CAFqB,EAGrB9D,GAAG+D,MAAH,CAAU,GAAV,EAAe,CAAC,GAAhB,EAAqB,KAAKxD,SAAL,CAAeiD,CAApC,CAHqB,CAAzB;AAKH;AA3NI,CAAT","file":"player.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\game","sourcesContent":["// var CHD = require(\"commonHandler\");\r\nvar GameData = require(\"gameData\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        bulletGroupPrefab:cc.Prefab,\r\n        bonusNode:cc.Node,\r\n        speedLbl:cc.Label,\r\n        powerLbl:cc.Label,\r\n        gameBox:cc.Node,\r\n        fireAudio:cc.AudioClip,\r\n        bonusAudio:cc.AudioClip,\r\n        deadAudio:cc.AudioClip\r\n    },\r\n\r\n    onLoad () {\r\n        this.bulletGroupPool = new cc.NodePool();\r\n        for (let i = 0; i < 20; ++i) {\r\n            let bullet = cc.instantiate(this.bulletGroupPrefab);\r\n            this.bulletGroupPool.put(bullet);\r\n        }\r\n    },\r\n   \r\n    start () {\r\n        this.init();\r\n        this.node.on('runShoot', this.shooting, this);\r\n        // this.node.on('startRocket', this.startRocketing, this);\r\n        this.node.on('stoped', this.stopPlay, this);\r\n\r\n        this.node.on('playDead', function(){\r\n            if(!this._isSound) return;\r\n            cc.audioEngine.play(this.deadAudio, false, 1);\r\n        }, this)\r\n        this.node.on('playBonus', function(){\r\n            if(!this._isSound) return;\r\n            cc.audioEngine.play(this.bonusAudio, false, 1);\r\n        }, this);\r\n    },\r\n    init(){\r\n        this._isSound = GameData.isSound;\r\n        this._bAudiocount = 0;\r\n        this.skipCount = 1;\r\n        this.count = 0;\r\n        this.rocketing = false;\r\n        this.isStoped = false;\r\n        this.node.active = true;\r\n        this.node.x = 0;\r\n        this._moveDir = 0;\r\n        if(GameData.tipNum > 0){\r\n            GameData.tipNum -= 1;\r\n            GameData.bulletMulti = 2;\r\n        }\r\n    },\r\n    update (dt) {\r\n        if(this.isStoped || GameData.rocketStatus) return;\r\n        this.node.emit('runShoot');\r\n    },\r\n    shooting() {\r\n        this.count += 1;\r\n        let speed = GameData.bulletSpeed;\r\n\r\n        if(speed > 15){\r\n            speed = 15;\r\n        }\r\n        if (this.count % parseInt(60 / speed) === 0) {\r\n            this.createBullet();\r\n            if(this._bAudiocount >= this.skipCount && this._isSound){\r\n                cc.audioEngine.play(this.fireAudio, false, 1);\r\n                this._bAudiocount = 0;\r\n            }else{\r\n                this._bAudiocount += 1;\r\n            }\r\n        }\r\n        \r\n        if (this.count >= 600) this.count = 0;\r\n    },\r\n    createBullet() {\r\n        let bulletGroup = null;\r\n\r\n        if (this.bulletGroupPool.size() > 0) {\r\n            bulletGroup = this.bulletGroupPool.get();\r\n        } else {\r\n            bulletGroup = cc.instantiate(this.bulletGroupPrefab);\r\n        }\r\n        \r\n        bulletGroup.setPosition(this.node.x, this.node.y + this.node.height / 2);\r\n        bulletGroup.parent = this.gameBox;\r\n        bulletGroup.getComponent('bulletGroup').init(GameData.bulletMulti);\r\n\r\n        bulletGroup.runAction(cc.sequence(\r\n            cc.delayTime(0.02),\r\n            cc.moveTo(0.5, bulletGroup.x, this.gameBox.height/2),\r\n            cc.callFunc(function(){\r\n                this.bulletGroupPool.put(bulletGroup);\r\n            }, this)\r\n        ));\r\n\r\n    },\r\n    onCollisionEnter(other, self) {\r\n        let otherName = other.node.name;\r\n        if(otherName == 'fast'){\r\n            this.node.emit('playBonus');\r\n            other.node.removeFromParent();\r\n            GameData.bulletSpeed += 2;\r\n            this.speedLbl.string = '射速:  ' + GameData.bulletSpeed;\r\n            this.showBonusView();\r\n            if(GameData.bulletSpeed > 8){\r\n                this.skipCount = 2;\r\n            }\r\n        }else if(otherName == 'forceful'){\r\n            this.node.emit('playBonus');\r\n            other.node.removeFromParent();\r\n            GameData.bulletPower += 2;\r\n            this.powerLbl.string = '威力:  ' + GameData.bulletPower;\r\n            this.showBonusView();\r\n        }else if(otherName == 'double'){\r\n            this.node.emit('playBonus');\r\n            other.node.removeFromParent();\r\n            if(GameData.bulletMulti < 3){\r\n                GameData.bulletMulti += 1;\r\n            }\r\n        }else if(otherName == 'rocket'){\r\n            other.node.removeFromParent();\r\n            if(GameData.rocketStatus) return;\r\n            // this.node.emit('playBonus');\r\n            GameData.game.setRockect();\r\n            // this.node.parent.emit('startRocket');\r\n        }else if(otherName == 'endBlock'){\r\n            other.node.getComponent('endBlock').explore();\r\n        }else if(otherName == 'block' || otherName == 'starBlock'){\r\n            GameData.jumpMove = 0;\r\n            \r\n            if(GameData.rocketStatus){\r\n                this.node.emit('playDead');\r\n                let _label = other.node.getComponent('block').getValue();\r\n                GameData.score += _label;\r\n                other.node.getComponent('block').explore();\r\n                this.gameBox.emit('changedScore');\r\n            }else{\r\n                var deltaX = self.node.x - (other.node.x - this.gameBox.width/2);\r\n                var absDeltaX = Math.abs(deltaX);\r\n                var deltaY = other.node.parent.y + other.node.y - this.node.y;\r\n\r\n                if(absDeltaX < 168 && deltaY > 0.8*(other.node.height + this.node.height)/2){\r\n                    this.node.emit('stoped');\r\n                    return;\r\n                }\r\n\r\n                var direction = deltaX/absDeltaX;\r\n                GameData.collideStatus = [GameData.collideStatus[0]+1, direction];\r\n\r\n                if(absDeltaX < 178){\r\n                    self.node.x += direction*(178 - absDeltaX); \r\n                }\r\n            }\r\n        }\r\n    },\r\n    onCollisionExit: function (other, self) {\r\n        if(this.isStoped) return;\r\n\r\n        if(other.node.name == 'block' || other.node.name == 'starBlock'){\r\n            GameData.collideStatus[0] -= 1;\r\n\r\n            let deltaW = GameData.cursorXPos - this.node.x;\r\n            if(deltaW == 0 || GameData.collideStatus[0] > 0) return;\r\n            \r\n            let predictPos = 5000;\r\n            let actorWPos = this.node.parent.convertToWorldSpaceAR(this.node.getPosition());\r\n\r\n            let childs = this.gameBox.children;\r\n            for(let index in childs){\r\n                let child = childs[index];\r\n                if(child.name == 'blockList' || child.name == 'specList'){\r\n                    let subChilds = child.children;\r\n                    for(let sIndex in subChilds){\r\n                        let subChild = subChilds[sIndex];\r\n                        if(subChild.name == 'blast') continue;\r\n\r\n                        let blockWPos = subChild.parent.convertToWorldSpaceAR(subChild.getPosition());\r\n                        let deltaX = blockWPos.x - actorWPos.x;\r\n                        let deltaY = blockWPos.y - actorWPos.y;\r\n                        let minH = subChild.height/2;\r\n                        let minw = (subChild.width + this.node.width)/2;\r\n                        \r\n                        let isEqDir = deltaX*deltaW;\r\n\r\n                        if(Math.abs(deltaY) < minH && isEqDir > 0){\r\n                            if(deltaX >0 && deltaX < deltaW){\r\n                                deltaW = deltaX;\r\n                                predictPos = subChild.x - minw;\r\n                            }else if(deltaX < 0 && deltaX > deltaW){\r\n                                deltaW = deltaX;\r\n                                predictPos = subChild.x + minw;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(predictPos === 5000){\r\n                this.node.x = GameData.cursorXPos;\r\n            }else{\r\n                let realPos = predictPos - this.gameBox.width/2\r\n                GameData.jumpMove = 1;\r\n                this.node.x = realPos;\r\n            }\r\n        }        \r\n    },\r\n    stopPlay(){\r\n        this.isStoped = true;\r\n        GameData.game.pauseGame();\r\n        // this.node.parent.getComponent('game').pauseGame();\r\n    },\r\n    showBonusView(){\r\n        this.bonusNode.stopAllActions();\r\n        this.bonusNode.runAction(cc.sequence(\r\n            cc.moveTo(0.2, -540, this.bonusNode.y), \r\n            cc.delayTime(0.7), \r\n            cc.moveTo(0.2, -710, this.bonusNode.y)\r\n        ));\r\n    }\r\n});\r\n"]}